const initialLocalStorage=()=>(localStorage.setItem("allProducts","[]"),getProducts()),getProducts=()=>JSON.parse(localStorage.getItem("allProducts"));let allProducts=getProducts()?getProducts():initialLocalStorage();window.addEventListener("load",()=>{$(".preloader-wrapper").addClass("preloader-finish")});const setup=()=>{let t=window.innerWidth;$(window).resize(updateSize),handleResponsive(t),handleToggleSidebar(),handleLocalStorage(),renderCartItem(),handleChangeCart(),initialSlickNav()};$(document).ready(setup);const updateSize=t=>{width=window.innerWidth,handleResponsive(width)},handleResponsive=t=>{t<992?($(".header__bottom").innerHeight(130),$(".sidebar").css("display","block")):($(".header__bottom").innerHeight(80),$(".sidebar").css("display","none"))},handleToggleSidebar=()=>{$(".header__bottom .toggle").click(()=>{$(".sidebar").addClass("open"),$(".sidebar__menu").css("transform","translateX(0px)")}),$(".sidebar__overlay").click(()=>{$(".sidebar__menu").css("transform","translateX(-300px)"),setTimeout(()=>{$(".sidebar").removeClass("open")},300)})},initialSlickNav=()=>{$("#sub__dropdown > a").click(function(){$("#sub__dropdown__menu").slicknav("toggle")}),$(function(){$("#sub__dropdown__menu").slicknav({label:"",appendTo:"#sub__dropdown",beforeOpen:function(){$(".slicknav_arrow").text("▼")},beforeClose:function(){$(".slicknav_arrow").text("►")}})}),$("#banner__categories__label > a").click(function(){$("#banner__categories__list").slicknav("toggle")}),$(function(){$("#banner__categories__list").slicknav({label:"",appendTo:"#banner__categories"})})},handleLocalStorage=()=>{$('[data-id="amount"]').text(allProducts.length),updatePrice(),console.log(allProducts),$(".add-to-cart").on("click",addToCart)};function addToCart(t){const e=$(this).parent().parent().parent().find("h4").text(),a=parseFloat($(this).parent().parent().parent().find("p").text().replace("$","")),n=$(this).parent().parent().parent().find("img").attr("src"),i={name:e,price:a,amount:1,image:n};let r=!1;allProducts.forEach(t=>{t.name==e&&(r=!0)}),r?allProducts.filter(t=>t.name==e)[0].amount++:(allProducts.push(i),$('[data-id="amount"]').text(allProducts.length)),localStorage.setItem("allProducts",JSON.stringify(allProducts)),updatePrice()}const updatePrice=()=>{if(allProducts.length){let t=allProducts.reduce((t,e)=>t+e.price*e.amount,0);t=(Math.round(100*t)/100).toFixed(2),$('[data-id="price"]').text(`$${t}`)}},renderCartItem=()=>{let t="";allProducts.forEach(e=>{t+=`\n\t\t\t<div class="row shopping-cart__item py-4">\n\t\t\t\t<div class="col-4 col-md-6">\n\t\t\t\t\t<div class="shopping-cart__item__img__wrapper row">\n\t\t\t\t\t\t<div class="col-md-4">\n\t\t\t\t\t\t<img src=${e.image} alt="">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="col-md-8" data-name="product">\n\t\t\t\t\t\t<p>${e.name}</p>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="col-8 col-md-6 ">\n\t\t\t\t\t<div class="row mt-4">\n\t\t\t\t\t\t<div class="col-3 col-lg-4 ">\n\t\t\t\t\t\t\t<p class="d-flex justify-content-center mt-3 shopping-cart__item__price" data-price="single">${formatPrice(parseFloat(e.price))}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="col-6 col-lg-4 d-flex justify-content-center shopping-cart__item__button-group">\n\t\t\t\t\t\t\t<button class="decrement">-</button>\n\t\t\t\t\t\t\t<input type="number" value="${e.amount}">\n\t\t\t\t\t\t\t<button class="increment">+</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="col-3 col-lg-4 ">\n\t\t\t\t\t\t\t<p class="d-flex justify-content-center mt-3 shopping-cart__item__price" data-price="total">${formatPrice(parseFloat(e.price)*e.amount)}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button class="shopping-cart__item__remove"><i class="fa fa-times"></i></button>\n\t\t\t</div>\n\t\t`}),$(".shopping-cart__wrapper").append(t)},handleChangeCart=()=>{$(".shopping-cart__item__remove").on("click",removeItem),$(".shopping-cart__item .increment").on("click",incrementInput),$(".shopping-cart__item .decrement").on("click",decrementInput),$('[data-update="cart"]').on("click",updateCart)},formatPrice=t=>"$"+parseFloat(t).toFixed(2),removeItem=function(){$(this).parent().remove()},incrementInput=function(){const t=$(this).parent().find("input");let e=t.val();e++,t.val(e);const a=$(this).parent().parent().parent().find('[data-price="total"]'),n=parseFloat($(this).parent().parent().parent().find('[data-price="single"]').text().slice(1));a.text(formatPrice(e*n))},decrementInput=function(){const t=$(this).parent().find("input");let e=t.val();if(0==e)return;e--,t.val(e);const a=$(this).parent().parent().parent().find('[data-price="total"]'),n=parseFloat($(this).parent().parent().parent().find('[data-price="single"]').text().slice(1));a.text(formatPrice(e*n))},updateCart=function(){const t=[];$(".shopping-cart__item").each(function(e,a){const n={name:$(this).find('[data-name="product"]').text(),price:(Math.round(100*parseFloat($(this).find('[data-price="single"]').text().slice(1)))/100).toFixed(2),amount:$(this).find("input").val(),image:$(this).find("img").attr("src")};t.push(n)}),console.log(t),localStorage.setItem("allProducts",JSON.stringify(t)),location.reload()};